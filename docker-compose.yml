version: '2'
services:
    nginx:
        container_name: nginx
        build:
            context: .
            dockerfile: dockerfile-nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            # Internal code lives here
            - ./public:/var/www/html/public

            # React App
            - /opt/www/mta-delays/react/build:/var/www/mta-delays/react/build

            # Config
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

            # External codebase
#            - ./php/repo/:/var/www/html/repo/

            # SSL Directory
            - ./nginx/ssl/:/etc/nginx/ssl

#    phpfpm:
#        container_name: phpfpm
#        build:
#            context: .
#            dockerfile: dockerfile-php

#        ports:
#            - "9000"
#        volumes:
            # Internal code lives here
#            - ./public:/var/www/html

            # External codebase
#            - ./php/repo/:/var/www/html/repo/

            # Conf file lives here.
#            - ./php/php-config.ini:/usr/local/etc/php-fpm.d/php-config.ini

#    mysql:
#      image: mariadb

      # host machine port:container port
#      ports:
#        - "3306"
#      environment:
#        MYSQL_ROOT_PASSWORD: admin
#        MYSQL_DATABASE: drupal
#        MYSQL_USER: drupal
#        MYSQL_PASSWORD: drupal

#      volumes:
#        - ./mysql-data:/var/lib/mysql:rw
    #    - ./mysql/conf.d:/etc/mysql/conf.d

    node1:
      container_name: node1
      image: atomox/bhelmer:r142-v2.1
      ports:
        - 8000
      working_dir: /usr/src/app
      command: forever app.js
      volumes:
        - ./node.js/pixi:/usr/src/app
      # Persist container running.
      tty: true

    mtastatus:
      container_name: mtastatus
      image: atomox/mta-status:mta-svc-server-v0.6.5-bliss-st-pre
      ports:
        - 8100
      volumes:
        - ./node.js/mta-delays/server:/usr/src/server

        - ./node.js/mta-delays/config:/usr/src/config
      # Persist container running.
      tty: true

    # Let's compile Sass!
#    sass:
#        container_name: sass
#        build:
#           context:   .
#           dockerfile: dockerfile-sass

#        volumes:
            # Directory to watch and compile.
#            - ../alexa-d8/alexa-d8/web/themes/custom/alexa:/src
